[1] 메인화면모듈
(1) 구조정의
Root > section > img Box + title Box + button Box1 + button Box2
(2) 객체화 : 
        {
            "isrc":"이미지경로",
            "tit":"타이틀",
            "btn":"버튼문구",
            "link":"이동카테고리"
        }
(3) 기능정의 :
        1) 타이틀 등장액션
            (setTimeout+addClass"on") + css
        2) 버튼 오버시 텍스트 애니메이션
	(mouseover+animate)
        3) 화살표 버튼 클릭시 페이지이동
	(click+animate)



상단메뉴
박스 3개 - 플렉스
윗라인에 맞게 정렬
양옆 겉박스에 플렉스/보더바텀



gnb 구조 보관용
{/* <li>
        <Link to="/ss">Sesame</Link>
</li>
<li>
        <Link to="/pn">Peanut</Link>
</li>
<li>
        <Link to="/am">Almond</Link>
</li>
<li>
        <Link to="/hz">Hazelnut</Link>
</li>
<li>
        <Link to="/cs">Cashew</Link>
</li> */}

흐르는텍스트 보관용
      /* .mainbtn {
      position: relative;
      width: 350px;
      max-width: 100%;
      padding: 15px 40px;
      background-color: #000;
      overflow: hidden;
      height: 50px;
      border-radius: 30px;
      } */

      /************ 흐르는 텍스트 ************/
      /* .runtxt{
        position: relative;
      display: flex;
      white-space: nowrap;
      will-change: transform;
      width: 2000px;
      left: 0;
      animation: marquee 7s linear infinite;
    animation-play-state: paused;
    transform: translateX(-50%);
    left: -150%;
    }

  .runtxt span{
    color: #fff;
    font-size: 20px;
    padding-right: 100px;
    display: block;
    flex: 1;
    text-align: center;
  }
  .mainbtn:hover .runtxt {
      animation-play-state: running;

    } */

/*     @keyframes marquee {
    from {
        transform: translateX(0%);
    }
    to {
        transform: translateX(50%);
    }
} */
/* @keyframes marquee {
    to {
        left: 250%;
    }
} */

_______________________
2023.06.16 숙제
사진 위치 따로 / 텍스트 위치 따로 주기 / rem
1. 헤더 / 푸터 만들기(공통)
2. 똑같은 구조끼리 묶어서 체크해오기
(컴포넌트/모듈)
3.컴포넌트 만들어오기
______________________
흐르는 애니메이션
통이미지를 담고 있는 박스 100%만들기
앱솔루트 추가 시 감싸고 있는 박스에 주고 위치값 주기
________________________
onclick="alert(33)"
________________________
btn btn-primary btn-jelly


.btn-jelly:hover {
  -webkit-animation: jelly 0.5s;
          animation: jelly 0.5s;


@keyframes jelly {
  25% {
    transform: scale(0.9, 1.1);
  }
  50% {
    transform: scale(1.1, 0.9);
  }
  75% {
    transform: scale(0.95, 1.05);
  }
}
______________________
*큰박스 돌리기 로테이트 30도
____________________________
모바일 기준으로 잡고 만들기!(반응형)
미디어쿼리 레이아웃 변경

<section>
      <div class="text-cont">
        <h2>Wildly Loved</h2>
        <p>
          You will find our wild products in their simplest form. No additives or <br />anything else can spoil their
          nature
        </p>
      </div>
      <div class="bna-wrap">
        <div class="ban-con">
          <img src="../public/images/banner/jam1.png" alt="잼이미지" />
          <div class="bna-tit">
            <h3>Hazelnut Butter<br />Crunchy with Cocoa <br />& Date</h3>
            <p>€7,90</p>
          </div>
          <div class="mbtnbx">
            <div class="mainbtn">
              <div class="runtxt">
                <span>BUY NOW!</span>
                <span>BUY NOW!</span>
                <span>BUY NOW!</span>
                <span>BUY NOW!</span>
              </div>
            </div>
          </div>
        </div>
        <div class="ban-bg">
          <div class="ban-bg__color"></div>
          <img src="../public/images/banner/jamhover1.jpg" alt="배경" />
        </div>
      </div>
    </section>

    <div class="ban-mover"></div>




________________________________________

      .page {
        position: relative;
        width: 100%;
        height: 100vh;
      }
      /* 배너전체박스 */
      .banbx {
        /*슬라이드부모*/
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        /* 세로중앙! */
        left: 25vw;
        width: 50vw;
        aspect-ratio: 0.5/1;
      }
      #slide {
        display: flex;
        position: absolute;
        gap: 0 5vw;
        top: 0;
        left: -220%;
        width: 100%;
        height: 100%;
      }
      #slide li {
        width: 480px;
        border-radius: 55px;
        flex-shrink: 0;
        flex-basis: 100%;
      }

      #slide li img {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

______________________
소팅하면 바뀌어진 데이터가 들어감
리턴 -> 자체변수 배열을 정렬해준다😀?
map
맵은 only 배열데이터만 반복해서 돌려준다
얼만큼?? 배열안에 요소개수만큼!

[ {}, {}, {}, {}, ]

______________________      
{/* <header className="top"> */}
      {/* 네비게이션 */}
      {/*         <nav className="gnb">
          <ul>
            <li>
              <Logo lg="top" />
            </li>
            {gnb_data.map((v, i) => (
              <li key={i}>
                <Link to={v.link}>{v.txt.toUpperCase()}</Link>
              </li>
            ))}
          </ul>
        </nav>
      </header> */} 했던거 보관용 안씀
______________________
203.06.23 보관용
        if(newList.length!=0){ //결과가 있으면!

        <div className="text-cont">
        <h2>Wildly Loved</h2>
        <p>
          You will find our wild products in their simplest form. No additives or <br />anything else can spoil their
          nature
        </p>
      </div>



_______________


      {/* 연습 */}
      {/* .ban-img__hover */}
      <div style={{color : 'red'}}>
        안녕하세요 
      </div>
______________

const Main = () => {
        return(
            <>
              {/* 1.메인모듈 */}  
              <Mfirst />
              {/* 2.텍스트모듈 */}  
              <Text ct="left" h2="Wildly Loved" />
              {/* 3.배너모듈 */}  
              <Banner />
              {/* 4.스와이프모듈 */}  
              {/* <ImgSwipe /> */}
              {/* 5.텍스트모듈 */}  
              <Text ct="right" h2="안녕하세요"/>
              {/* 6.슬라이드배너모듈 */}  
              {/* <SlideBan /> */}

__><h2>{props.h2}</h2>

____________________
<텍스트컴포넌트 무엇 ="값"></텍스트컴포넌트>
위들리 럽
텍스트데이터[props.무엇]["tit"]

<텍스트컴포넌트></텍스트컴포넌트>
아울윌드어웨이

_______________
{text_data[1].cont}


-> 바뀌어야되는곳에 props.어쩌구
____________________
            <h2>{text_data[props.dd].tit}</h2>

              {/* { 조건문을 이용해서 스플릿해서 출력하기
                <div>
                <p>
                {text_data[props.dd].cont.split('^')[0]}
                </p>
                <p>
                {text_data[props.dd].cont.split('^')[1]}
                </p>
                {
                  // 조건문으로 스플릿으로짜른 배열3번째가 비어있지않다면 실행
                  // text_data[props.dd]['cont'].split('^')[2] !== '' &&
                  // 조건문 - 짜른배열이 3개짜리라면?? 실행해주세요
                  // text_data[props.dd]['cont'].split('^').length == 2 &&
                <p>
                {text_data[props.dd].cont.split('^')[2]}
                </p>
                }
              </div>
              } */}

              {
                // map을 이용한 배열 반복문! 
                text_data[props.dd].cont.split('^').map((x,i)=>
                <p>{x}</p>
                 )
              }
-> 맵은 반복문인데 배열만 됨!
______________
1. 버튼 모듈만들기 -> 컴포넌트 내 하위 컴포넌트 만드는 방법을 알아야함
2. 드래그배너->드래그 되게 만들기
3. 스와이프 모듈
4. 슬라이드배너 모듈
5. 서브페이지 css
6. 컨셉모듈
7. 미디어쿼리
8. 미디어용 gnb -> 대충완성...
____________


